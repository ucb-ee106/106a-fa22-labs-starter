<?xml version="1.0"?>
<launch>
  <!-- Load the robot description and robot semantic description from urdf -->
  <include file="$(find planning)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world base" />

  <!-- This publishes fake joint states so that we can execute without being connected to the robot
  While we haven't figured out how to make sawyer's fake controllers work in Rviz, this is still necessary to query start/end states for planning -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />
  
  <!-- This publishes a fake robot state to tf --> 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- This is the main moveit launch file, which launches all the planning functionality.
  Note that we disable execution, since the fake execution doens't work anyways -->
  <include file="$(find sawyer_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="false"/>
    <arg name="fake_execution" value="true"/>
  </include>

  <include file="$(find sawyer_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

</launch>
